datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


generator client {
  provider = "prisma-client-js"
}
//  profile is a one to one relationship with user
model Profile {
 id        String    @id @default(uuid())
  displayname     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String @unique
  avatar    String?
  bio       String?
  location  String?
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  name        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  role        Role      @default(CLIENT)
  password    String
  verified    Boolean   @default(false)
  profile     Profile? 
  clientCases Case[]    @relation("ClientCases")
  lawyerCases Case[]    @relation("LawyerCases")
}

model Case {
  id          BigInt      @id @default(autoincrement())
  status      CaseStatus
  title       String
  description String
  clientId    String
  client      User        @relation("ClientCases", fields: [clientId], references: [id])
  lawyerId    String?
  lawyer      User?       @relation("LawyerCases", fields: [lawyerId], references: [id])
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
  caseDetails CaseDetail[]
  attachments Attachment[]
}

model CaseDetail {
  id          BigInt    @id @default(autoincrement())
  caseId      BigInt
  case        Case      @relation(fields: [caseId], references: [id])
  progress    String
  updateTime  DateTime  @default(now())
  notes       String?
}

model Attachment {
  id          BigInt    @id @default(autoincrement())
  caseId      BigInt
  case        Case      @relation(fields: [caseId], references: [id])
  fileUrl     String
  fileName    String
  uploadTime  DateTime  @default(now())
}

enum Role {
  LAWYER
  CLIENT
}

enum CaseStatus {
  OPEN
  REVIEW
  ASSIGNED
  IN_PROGRESS
  ON_HOLD
  RESOLVED
  DISMISSED
  CLOSED
  PENDING
}



